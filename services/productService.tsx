import axios from "../utils/axiosInstance";

// üì¶ Ki·ªÉu d·ªØ li·ªáu c∆° b·∫£n (c√≥ th·ªÉ m·ªü r·ªông th√™m n·∫øu c·∫ßn)
export interface Product {
  id: string;
  name: string;
  description?: string;
  price?: number;
  images?: string[];
  // ...th√™m n·∫øu c·∫ßn
}

export interface Rating {
  id: string;
  userId: string;
  score: number;
  comment?: string;
}

const productService = {
  // L·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m
  getAll: async (params: Record<string, any> = {}) => {
    return await axios.get("/products", { params });
  },

  // L·∫•y s·∫£n ph·∫©m theo ID
  getById: (id: string) => axios.get(`/products/${id}`),

  // T√¨m ki·∫øm s·∫£n ph·∫©m
  searchGlobal: async ({
    keyword,
    page = 1,
    limit = 20,
  }: {
    keyword: string;
    page?: number;
    limit?: number;
  }) => {
    console.log("üì° G·ªçi t√¨m ki·∫øm to√†n h·ªá th·ªëng:", { keyword, page, limit });

    return await axios.get("/products/search", {
      params: { name: keyword, page, limit },
    });
  },

  // T·∫°o m·ªõi s·∫£n ph·∫©m (kh√¥ng c√≥ ·∫£nh)
  create: async (data: Partial<Product>) => {
    return await axios.post("/products", data);
  },

  // C·∫≠p nh·∫≠t s·∫£n ph·∫©m (kh√¥ng c√≥ ·∫£nh)
  update: async (id: string, data: Partial<Product>) => {
    return await axios.put(`/products/${id}`, data);
  },

  // Upload ·∫£nh s·∫£n ph·∫©m
  uploadImages: async (id: string, formData: FormData) => {
    return await axios.patch(`/products/${id}/upload-images`, formData, {
      headers: { "Content-Type": "multipart/form-data" },
    });
  },

  // Xo√° s·∫£n ph·∫©m
  delete: async (id: string) => {
    return await axios.delete(`/products/${id}`);
  },

  // L·∫•y s·∫£n ph·∫©m ph·ªï bi·∫øn
  getPopular: async () => {
    return await axios.get("/products/popular");
  },

  // ƒê√°nh gi√° s·∫£n ph·∫©m
  rate: async (productId: string, data: any) => {
    return await axios.post(`/products/${productId}/rate`, data);
  },

  // L·∫•y t·∫•t c·∫£ ƒë√°nh gi√° c·ªßa s·∫£n ph·∫©m
  getRatings: async (productId: string) => {
    return await axios.get(`/products/${productId}/ratings`);
  },

  // S·ª≠a ƒë√°nh gi√° s·∫£n ph·∫©m
  updateRating: async (
    productId: string,
    ratingId: string,
    data: Partial<Rating>
  ) => {
    return await axios.patch(`/products/${productId}/ratings/${ratingId}`, data);
  },

  // Xo√° ƒë√°nh gi√° s·∫£n ph·∫©m
  deleteRating: async (productId: string, ratingId: string) => {
    return await axios.delete(`/products/${productId}/ratings/${ratingId}`);
  },

  // L·∫•y s·∫£n ph·∫©m theo c·∫•p ƒë·ªô shop
  getByShopLevel: async (level: string) => {
    return await axios.get("/products-by-shop-level", {
      params: { level },
    });
  },
};

export default productService;